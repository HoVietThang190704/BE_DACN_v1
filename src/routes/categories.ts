import { Router, Request, Response } from 'express';
import { asyncHandler } from '../shared/middleware/errorHandler';
import { categoryController } from '../di/container';

export const categoryRoutes = Router();

/**
 * @swagger
 * /api/categories/admin/categories:
 *   post:
 *     summary: Th√™m danh m·ª•c m·ªõi (admin)
 *     tags: [Categories]
 *     requestBody:
 *       required: true
 *       content:
 *         application/json:
 *           schema:
 *             type: object
 *             properties:
 *               name:
 *                 type: string
 *               description:
 *                 type: string
 *     responses:
 *       201:
 *         description: Danh m·ª•c ƒë√£ ƒë∆∞·ª£c t·∫°o th√†nh c√¥ng
 *         content:
 *           application/json:
 *             schema:
 *               type: object
 *               properties:
 *                 id:
 *                   type: string
 *                 name:
 *                   type: string
 *                 description:
 *                   type: string
 *                 createdAt:
 *                   type: string
 *                   format: date-time
 */
let nextCategoryId = 1;
categoryRoutes.post('/admin/categories', (req, res) => {
  const { name, description } = req.body;
  const id = nextCategoryId++;
  res.status(201).json({
    id,
    name,
    description,
    createdAt: new Date()
  });
});

/**
 * @swagger
 * components:
 *   schemas:
 *     Category:
 *       type: object
 *       properties:
 *         id:
 *           type: string
 *           description: Category ID
 *           example: "507f1f77bcf86cd799439011"
 *         name:
 *           type: string
 *           description: T√™n danh m·ª•c (ti·∫øng Vi·ªát)
 *           example: "Rau c·ªß qu·∫£"
 *         nameEn:
 *           type: string
 *           description: T√™n danh m·ª•c (ti·∫øng Anh)
 *           example: "Vegetables"
 *         slug:
 *           type: string
 *           description: URL-friendly slug
 *           example: "rau-cu-qua"
 *         description:
 *           type: string
 *           description: M√¥ t·∫£ danh m·ª•c
 *           example: "C√°c lo·∫°i rau c·ªß qu·∫£ t∆∞∆°i s·∫°ch"
 *         icon:
 *           type: string
 *           description: Icon c·ªßa danh m·ª•c
 *           example: "ü•¨"
 *         image:
 *           type: string
 *           description: H√¨nh ·∫£nh ƒë·∫°i di·ªán
 *           example: "https://example.com/category.jpg"
 *         parentId:
 *           type: string
 *           nullable: true
 *           description: ID danh m·ª•c cha (null n·∫øu l√† root)
 *           example: null
 *         level:
 *           type: integer
 *           description: C·∫•p ƒë·ªô trong c√¢y (0 = root)
 *           example: 0
 *         order:
 *           type: integer
 *           description: Th·ª© t·ª± hi·ªÉn th·ªã
 *           example: 1
 *         isActive:
 *           type: boolean
 *           description: Tr·∫°ng th√°i k√≠ch ho·∫°t
 *           example: true
 *         productCount:
 *           type: integer
 *           description: S·ªë l∆∞·ª£ng s·∫£n ph·∫©m trong danh m·ª•c
 *           example: 25
 *         children:
 *           type: array
 *           description: Danh m·ª•c con (ƒëa c·∫•p)
 *           items:
 *             $ref: '#/components/schemas/Category'
 *         totalProducts:
 *           type: integer
 *           description: T·ªïng s·ªë s·∫£n ph·∫©m bao g·ªìm c·∫£ danh m·ª•c con
 *           example: 150
 *         createdAt:
 *           type: string
 *           format: date-time
 *           description: Th·ªùi gian t·∫°o
 *         updatedAt:
 *           type: string
 *           format: date-time
 *           description: Th·ªùi gian c·∫≠p nh·∫≠t
 *     
 *     CategoryBreadcrumb:
 *       type: object
 *       properties:
 *         id:
 *           type: string
 *           example: "507f1f77bcf86cd799439011"
 *         name:
 *           type: string
 *           example: "Rau c·ªß qu·∫£"
 *         slug:
 *           type: string
 *           example: "rau-cu-qua"
 *         level:
 *           type: integer
 *           example: 0
 */

/**
 * @swagger
 * /api/categories:
 *   get:
 *     summary: L·∫•y danh s√°ch danh m·ª•c theo c·∫•u tr√∫c c√¢y (ƒêa c·∫•p)
 *     description: |
 *       Tr·∫£ v·ªÅ c·∫•u tr√∫c c√¢y ph√¢n c·∫•p c·ªßa t·∫•t c·∫£ danh m·ª•c.
 *       - H·ªó tr·ª£ ƒëa c·∫•p (unlimited levels)
 *       - M·ªói danh m·ª•c c√≥ th·ªÉ ch·ª©a danh m·ª•c con trong thu·ªôc t√≠nh `children`
 *       - T·ª± ƒë·ªông t√≠nh t·ªïng s·ªë s·∫£n ph·∫©m bao g·ªìm c·∫£ danh m·ª•c con
 *     tags: [Categories]
 *     parameters:
 *       - in: query
 *         name: includeInactive
 *         schema:
 *           type: boolean
 *           default: false
 *         description: C√≥ bao g·ªìm danh m·ª•c kh√¥ng ho·∫°t ƒë·ªông hay kh√¥ng
 *     responses:
 *       200:
 *         description: Danh s√°ch danh m·ª•c th√†nh c√¥ng
 *         content:
 *           application/json:
 *             schema:
 *               type: object
 *               properties:
 *                 success:
 *                   type: boolean
 *                   example: true
 *                 data:
 *                   type: array
 *                   description: M·∫£ng c√°c danh m·ª•c g·ªëc v·ªõi c·∫•u tr√∫c c√¢y ƒë·∫ßy ƒë·ªß
 *                   items:
 *                     $ref: '#/components/schemas/Category'
 *                 meta:
 *                   type: object
 *                   properties:
 *                     total:
 *                       type: integer
 *                       description: T·ªïng s·ªë danh m·ª•c root
 *                       example: 5
 *                     timestamp:
 *                       type: string
 *                       format: date-time
 *             example:
 *               success: true
 *               data:
 *                 - id: "507f1f77bcf86cd799439011"
 *                   name: "Rau c·ªß qu·∫£"
 *                   nameEn: "Vegetables"
 *                   slug: "rau-cu-qua"
 *                   description: "C√°c lo·∫°i rau c·ªß qu·∫£ t∆∞∆°i s·∫°ch"
 *                   icon: "ü•¨"
 *                   image: null
 *                   parentId: null
 *                   level: 0
 *                   order: 1
 *                   isActive: true
 *                   productCount: 15
 *                   totalProducts: 150
 *                   children:
 *                     - id: "507f1f77bcf86cd799439012"
 *                       name: "Rau ƒÉn l√°"
 *                       nameEn: "Leafy Vegetables"
 *                       slug: "rau-an-la"
 *                       description: "Rau c·∫£i, x√† l√°ch, rau mu·ªëng..."
 *                       icon: "ü•¨"
 *                       parentId: "507f1f77bcf86cd799439011"
 *                       level: 1
 *                       order: 1
 *                       isActive: true
 *                       productCount: 45
 *                       totalProducts: 45
 *                       children: []
 *                       createdAt: "2025-10-21T10:00:00.000Z"
 *                       updatedAt: "2025-10-21T10:00:00.000Z"
 *                     - id: "507f1f77bcf86cd799439013"
 *                       name: "Rau ƒÉn c·ªß"
 *                       nameEn: "Root Vegetables"
 *                       slug: "rau-an-cu"
 *                       description: "C√† r·ªët, c·ªß c·∫£i, khoai t√¢y..."
 *                       icon: "ü•ï"
 *                       parentId: "507f1f77bcf86cd799439011"
 *                       level: 1
 *                       order: 2
 *                       isActive: true
 *                       productCount: 35
 *                       totalProducts: 35
 *                       children: []
 *                       createdAt: "2025-10-21T10:00:00.000Z"
 *                       updatedAt: "2025-10-21T10:00:00.000Z"
 *                   createdAt: "2025-10-21T10:00:00.000Z"
 *                   updatedAt: "2025-10-21T10:00:00.000Z"
 *                 - id: "507f1f77bcf86cd799439014"
 *                   name: "Tr√°i c√¢y"
 *                   nameEn: "Fruits"
 *                   slug: "trai-cay"
 *                   description: "C√°c lo·∫°i tr√°i c√¢y t∆∞∆°i"
 *                   icon: "üçé"
 *                   parentId: null
 *                   level: 0
 *                   order: 2
 *                   isActive: true
 *                   productCount: 20
 *                   totalProducts: 80
 *                   children:
 *                     - id: "507f1f77bcf86cd799439015"
 *                       name: "Tr√°i c√¢y nhi·ªát ƒë·ªõi"
 *                       nameEn: "Tropical Fruits"
 *                       slug: "trai-cay-nhiet-doi"
 *                       description: "Xo√†i, d·ª©a, chu·ªëi..."
 *                       icon: "ü•≠"
 *                       parentId: "507f1f77bcf86cd799439014"
 *                       level: 1
 *                       order: 1
 *                       isActive: true
 *                       productCount: 30
 *                       totalProducts: 30
 *                       children: []
 *                       createdAt: "2025-10-21T10:00:00.000Z"
 *                       updatedAt: "2025-10-21T10:00:00.000Z"
 *                   createdAt: "2025-10-21T10:00:00.000Z"
 *                   updatedAt: "2025-10-21T10:00:00.000Z"
 *               meta:
 *                 total: 2
 *                 timestamp: "2025-10-21T10:00:00.000Z"
 *       500:
 *         description: L·ªói server
 *         content:
 *           application/json:
 *             schema:
 *               $ref: '#/components/schemas/Error'
 */
categoryRoutes.get('/', asyncHandler(async (req: Request, res: Response) => {
  await categoryController.getCategoriesTree(req, res);
}));

/**
 * @swagger
 * /api/categories/{id}:
 *   get:
 *     summary: L·∫•y th√¥ng tin chi ti·∫øt danh m·ª•c theo ID
 *     description: Tr·∫£ v·ªÅ th√¥ng tin chi ti·∫øt c·ªßa m·ªôt danh m·ª•c c·ª• th·ªÉ
 *     tags: [Categories]
 *     parameters:
 *       - in: path
 *         name: id
 *         required: true
 *         schema:
 *           type: string
 *         description: ID c·ªßa danh m·ª•c
 *         example: "507f1f77bcf86cd799439011"
 *     responses:
 *       200:
 *         description: L·∫•y th√¥ng tin danh m·ª•c th√†nh c√¥ng
 *         content:
 *           application/json:
 *             schema:
 *               type: object
 *               properties:
 *                 success:
 *                   type: boolean
 *                   example: true
 *                 data:
 *                   $ref: '#/components/schemas/Category'
 *       404:
 *         description: Kh√¥ng t√¨m th·∫•y danh m·ª•c
 *         content:
 *           application/json:
 *             schema:
 *               $ref: '#/components/schemas/Error'
 *       500:
 *         description: L·ªói server
 *         content:
 *           application/json:
 *             schema:
 *               $ref: '#/components/schemas/Error'
 */
categoryRoutes.get('/:id', asyncHandler(async (req: Request, res: Response) => {
  await categoryController.getCategoryById(req, res);
}));

/**
 * @swagger
 * /api/categories/{id}/breadcrumb:
 *   get:
 *     summary: L·∫•y ƒë∆∞·ªùng d·∫´n breadcrumb t·ª´ root ƒë·∫øn danh m·ª•c
 *     description: |
 *       Tr·∫£ v·ªÅ m·∫£ng c√°c danh m·ª•c t·ª´ root (c·∫•p 0) ƒë·∫øn danh m·ª•c hi·ªán t·∫°i,
 *       h·ªØu √≠ch cho vi·ªác hi·ªÉn th·ªã breadcrumb navigation
 *     tags: [Categories]
 *     parameters:
 *       - in: path
 *         name: id
 *         required: true
 *         schema:
 *           type: string
 *         description: ID c·ªßa danh m·ª•c
 *         example: "507f1f77bcf86cd799439012"
 *     responses:
 *       200:
 *         description: L·∫•y breadcrumb th√†nh c√¥ng
 *         content:
 *           application/json:
 *             schema:
 *               type: object
 *               properties:
 *                 success:
 *                   type: boolean
 *                   example: true
 *                 data:
 *                   type: array
 *                   items:
 *                     $ref: '#/components/schemas/CategoryBreadcrumb'
 *             example:
 *               success: true
 *               data:
 *                 - id: "507f1f77bcf86cd799439011"
 *                   name: "Rau c·ªß qu·∫£"
 *                   slug: "rau-cu-qua"
 *                   level: 0
 *                 - id: "507f1f77bcf86cd799439012"
 *                   name: "Rau ƒÉn l√°"
 *                   slug: "rau-an-la"
 *                   level: 1
 *       404:
 *         description: Kh√¥ng t√¨m th·∫•y danh m·ª•c
 *         content:
 *           application/json:
 *             schema:
 *               $ref: '#/components/schemas/Error'
 *       500:
 *         description: L·ªói server
 *         content:
 *           application/json:
 *             schema:
 *               $ref: '#/components/schemas/Error'
 */
categoryRoutes.get('/:id/breadcrumb', asyncHandler(async (req: Request, res: Response) => {
  await categoryController.getCategoryBreadcrumb(req, res);
}));
