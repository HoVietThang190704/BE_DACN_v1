import { database } from './connection';
import { Category } from '../../models/Category';
import { logger } from '../utils/logger';

/**
 * Seed sample categories with multi-level hierarchy
 */
async function seedCategories() {
  try {
    // Clear existing categories
    await Category.deleteMany({});
    logger.info('ƒê√£ x√≥a d·ªØ li·ªáu danh m·ª•c c≈©');

    // Level 0 - Root Categories
    const vegRoot = await Category.create({
      name: 'Rau c·ªß qu·∫£',
      nameEn: 'Vegetables',
      slug: 'rau-cu-qua',
      description: 'C√°c lo·∫°i rau c·ªß qu·∫£ t∆∞∆°i s·∫°ch, h·ªØu c∆°',
      icon: 'ü•¨',
      parentId: null,
      level: 0,
      order: 1,
      isActive: true,
      productCount: 15
    });

    const fruitRoot = await Category.create({
      name: 'Tr√°i c√¢y',
      nameEn: 'Fruits',
      slug: 'trai-cay',
      description: 'Tr√°i c√¢y t∆∞∆°i ngon, ƒëa d·∫°ng ch·ªßng lo·∫°i',
      icon: 'üçé',
      parentId: null,
      level: 0,
      order: 2,
      isActive: true,
      productCount: 20
    });

    const meatRoot = await Category.create({
      name: 'Th·ªãt t∆∞∆°i',
      nameEn: 'Fresh Meat',
      slug: 'thit-tuoi',
      description: 'Th·ªãt t∆∞∆°i s·∫°ch, ngu·ªìn g·ªëc r√µ r√†ng',
      icon: 'ü•©',
      parentId: null,
      level: 0,
      order: 3,
      isActive: true,
      productCount: 10
    });

    const seafoodRoot = await Category.create({
      name: 'H·∫£i s·∫£n',
      nameEn: 'Seafood',
      slug: 'hai-san',
      description: 'H·∫£i s·∫£n t∆∞∆°i s·ªëng, ƒë√¥ng l·∫°nh',
      icon: 'ü¶ê',
      parentId: null,
      level: 0,
      order: 4,
      isActive: true,
      productCount: 8
    });

    const dairyRoot = await Category.create({
      name: 'S·ªØa & Tr·ª©ng',
      nameEn: 'Dairy & Eggs',
      slug: 'sua-trung',
      description: 'S·∫£n ph·∫©m t·ª´ s·ªØa v√† tr·ª©ng',
      icon: 'ü•õ',
      parentId: null,
      level: 0,
      order: 5,
      isActive: true,
      productCount: 12
    });

    logger.info('ƒê√£ t·∫°o 5 danh m·ª•c root');

    // Level 1 - Vegetables subcategories
    const leafyVeg = await Category.create({
      name: 'Rau ƒÉn l√°',
      nameEn: 'Leafy Vegetables',
      slug: 'rau-an-la',
      description: 'Rau c·∫£i, x√† l√°ch, rau mu·ªëng, rau d·ªÅn...',
      icon: 'ü•¨',
      parentId: vegRoot._id,
      level: 1,
      order: 1,
      isActive: true,
      productCount: 45
    });

    const rootVeg = await Category.create({
      name: 'Rau ƒÉn c·ªß',
      nameEn: 'Root Vegetables',
      slug: 'rau-an-cu',
      description: 'C√† r·ªët, c·ªß c·∫£i, khoai t√¢y, khoai lang...',
      icon: 'ü•ï',
      parentId: vegRoot._id,
      level: 1,
      order: 2,
      isActive: true,
      productCount: 35
    });

    const fruitVeg = await Category.create({
      name: 'Rau ƒÉn qu·∫£',
      nameEn: 'Fruit Vegetables',
      slug: 'rau-an-qua',
      description: 'C√† chua, d∆∞a chu·ªôt, b√≠ ƒëao, m∆∞·ªõp...',
      icon: 'üçÖ',
      parentId: vegRoot._id,
      level: 1,
      order: 3,
      isActive: true,
      productCount: 30
    });

    const herbVeg = await Category.create({
      name: 'Rau gia v·ªã',
      nameEn: 'Herbs & Spices',
      slug: 'rau-gia-vi',
      description: 'Rau th∆°m, h√†nh, t·ªèi, g·ª´ng, s·∫£...',
      icon: 'üåø',
      parentId: vegRoot._id,
      level: 1,
      order: 4,
      isActive: true,
      productCount: 40
    });

    // Level 1 - Fruits subcategories
    const tropicalFruit = await Category.create({
      name: 'Tr√°i c√¢y nhi·ªát ƒë·ªõi',
      nameEn: 'Tropical Fruits',
      slug: 'trai-cay-nhiet-doi',
      description: 'Xo√†i, d·ª©a, chu·ªëi, ƒëu ƒë·ªß, m√≠t...',
      icon: 'ü•≠',
      parentId: fruitRoot._id,
      level: 1,
      order: 1,
      isActive: true,
      productCount: 30
    });

    const citrusFruit = await Category.create({
      name: 'Tr√°i c√¢y c√≥ m√∫i',
      nameEn: 'Citrus Fruits',
      slug: 'trai-cay-co-mui',
      description: 'Cam, qu√Ωt, b∆∞·ªüi, chanh...',
      icon: 'üçä',
      parentId: fruitRoot._id,
      level: 1,
      order: 2,
      isActive: true,
      productCount: 25
    });

    const berryFruit = await Category.create({
      name: 'Qu·∫£ m·ªçng',
      nameEn: 'Berries',
      slug: 'qua-mong',
      description: 'D√¢u t√¢y, vi·ªát qu·∫•t, m√¢m x√¥i...',
      icon: 'üçì',
      parentId: fruitRoot._id,
      level: 1,
      order: 3,
      isActive: true,
      productCount: 20
    });

    // Level 1 - Meat subcategories
    const pork = await Category.create({
      name: 'Th·ªãt heo',
      nameEn: 'Pork',
      slug: 'thit-heo',
      description: 'C√°c lo·∫°i th·ªãt heo t∆∞∆°i',
      icon: 'ü•ì',
      parentId: meatRoot._id,
      level: 1,
      order: 1,
      isActive: true,
      productCount: 15
    });

    const beef = await Category.create({
      name: 'Th·ªãt b√≤',
      nameEn: 'Beef',
      slug: 'thit-bo',
      description: 'C√°c lo·∫°i th·ªãt b√≤ t∆∞∆°i',
      icon: 'ü•©',
      parentId: meatRoot._id,
      level: 1,
      order: 2,
      isActive: true,
      productCount: 12
    });

    const chicken = await Category.create({
      name: 'Th·ªãt g√†',
      nameEn: 'Chicken',
      slug: 'thit-ga',
      description: 'G√† ta, g√† c√¥ng nghi·ªáp',
      icon: 'üçó',
      parentId: meatRoot._id,
      level: 1,
      order: 3,
      isActive: true,
      productCount: 18
    });

    logger.info('ƒê√£ t·∫°o 10 danh m·ª•c level 1');

    // Level 2 - Leafy Vegetables subcategories
    const organicLeafy = await Category.create({
      name: 'Rau ƒÉn l√° h·ªØu c∆°',
      nameEn: 'Organic Leafy Vegetables',
      slug: 'rau-an-la-huu-co',
      description: 'Rau ƒÉn l√° ƒë∆∞·ª£c tr·ªìng theo ti√™u chu·∫©n h·ªØu c∆°',
      icon: 'üå±',
      parentId: leafyVeg._id,
      level: 2,
      order: 1,
      isActive: true,
      productCount: 20
    });

    const hydroponicLeafy = await Category.create({
      name: 'Rau ƒÉn l√° th·ªßy canh',
      nameEn: 'Hydroponic Leafy Vegetables',
      slug: 'rau-an-la-thuy-canh',
      description: 'Rau s·∫°ch tr·ªìng b·∫±ng ph∆∞∆°ng ph√°p th·ªßy canh',
      icon: 'üíß',
      parentId: leafyVeg._id,
      level: 2,
      order: 2,
      isActive: true,
      productCount: 25
    });

    // Level 2 - Tropical Fruits subcategories
    const importedTropical = await Category.create({
      name: 'Tr√°i c√¢y nhi·ªát ƒë·ªõi nh·∫≠p kh·∫©u',
      nameEn: 'Imported Tropical Fruits',
      slug: 'trai-cay-nhiet-doi-nhap-khau',
      description: 'Tr√°i c√¢y nhi·ªát ƒë·ªõi t·ª´ Th√°i Lan, Philippines...',
      icon: '‚úàÔ∏è',
      parentId: tropicalFruit._id,
      level: 2,
      order: 1,
      isActive: true,
      productCount: 15
    });

    const localTropical = await Category.create({
      name: 'Tr√°i c√¢y nhi·ªát ƒë·ªõi Vi·ªát Nam',
      nameEn: 'Local Tropical Fruits',
      slug: 'trai-cay-nhiet-doi-viet-nam',
      description: 'Tr√°i c√¢y nhi·ªát ƒë·ªõi ƒë·∫∑c s·∫£n Vi·ªát Nam',
      icon: 'üáªüá≥',
      parentId: tropicalFruit._id,
      level: 2,
      order: 2,
      isActive: true,
      productCount: 15
    });

    logger.info('ƒê√£ t·∫°o 4 danh m·ª•c level 2');

    const totalCategories = await Category.countDocuments();
    logger.info(`‚úÖ Seed ho√†n t·∫•t! T·ªïng c·ªông ${totalCategories} danh m·ª•c`);

    // Display tree structure
    logger.info('\nüìä C·∫•u tr√∫c c√¢y danh m·ª•c:');
    const allCategories = await Category.find().sort({ level: 1, order: 1 });
    allCategories.forEach((cat: any) => {
      const indent = '  '.repeat(cat.level);
      logger.info(`${indent}${cat.level === 0 ? 'üìÅ' : cat.level === 1 ? 'üìÇ' : 'üìÑ'} ${cat.name} (${cat.productCount} s·∫£n ph·∫©m)`);
    });

  } catch (error) {
    logger.error('‚ùå L·ªói khi seed categories:', error);
    throw error;
  }
}

// Run seed if called directly
if (require.main === module) {
  database.connect()
    .then(() => seedCategories())
    .then(() => {
      logger.info('‚úÖ Seed script ho√†n t·∫•t');
      process.exit(0);
    })
    .catch((error: any) => {
      logger.error('‚ùå Seed script th·∫•t b·∫°i:', error);
      process.exit(1);
    });
}

export { seedCategories };
